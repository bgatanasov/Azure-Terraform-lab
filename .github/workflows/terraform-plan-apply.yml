name: 'Terraform Plan Apply'

on:
  push:
    branches: [ "main" ]
env:
    ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
    ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
    ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
    ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Login to Azure using the secretes
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Plan
      run: terraform plan -out=tfplan

    # Archive artifact
    - name: Archive Terraform Plan
      uses: actions/upload-artifact@v2
      with:
         name: tfplan
         path: tfplan

  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: [terraform-plan]
      
    steps:
    # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
    # Login to Azure using the secretes
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init
    # Downoload Saved artifact from plan
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: tfplan
    # Terraform to Apply in plan
      - name: Terraform Apply 
        run: terraform apply -auto-approve tfplan
